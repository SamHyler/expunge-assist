{"version":3,"sources":["Collapsible.js","Paragraph1.js","App.js","serviceWorker.js","index.js"],"names":["Collapsible","props","timeout","undefined","handleTriggerClick","bind","handleTransitionEnd","continueOpenCollapsible","setInnerRef","open","state","isClosed","shouldSwitchAutoOnNextCycle","height","transition","hasBeenOpened","overflow","overflowWhenOpen","inTransition","transitionTime","easing","prevProps","prevState","this","shouldOpenOnNextCycle","window","clearTimeout","setTimeout","setState","openCollapsible","onOpening","closeCollapsible","onClosing","innerRef","scrollHeight","transitionCloseTime","event","triggerDisabled","preventDefault","accordionPosition","onTriggerOpening","onTriggerClosing","triggerSibling","className","classParentString","e","target","onClose","onOpen","ref","dropdownStyle","WebkitTransition","msTransition","openClass","disabledClass","trigger","triggerWhenOpen","ContentContainerElement","contentContainerTagName","TriggerElement","triggerTagName","children","lazyRender","triggerClassString","triggerClassName","triggerOpenedClassName","parentClassString","openedClassName","outerClassString","contentOuterClassName","innerClassString","contentInnerClassName","trim","containerElementProps","onClick","style","triggerStyle","onKeyPress","key","toLowerCase","tabIndex","triggerElementProps","renderNonClickableTriggerElement","onTransitionEnd","Component","defaultProps","Context","React","App","Name","AgeInYears","NumberOfConvictions","SubjectOfConvictions","TimeSinceLastConviction","CloseToFamily","Family","AddAnotherFamilyMember","IsWorking","Industry","WorkingDuration","AddContextToNotWorking","AddContextToWorking","NotWorkingContext","WorkContext","ChallengesOfLifeWithRecord","ChallengesOfLifeWithRecordContext","WhyWantsToClearRecord","SinceMyLastConviction","handleChange","str","join","map","familyMember","index","type","name","toString","value","onChange","checked","__name","__age","__numberOfConvictions","__subjectOfConvictions","__timeSinceLastConviction","__industry","__workingDuration","__workContext","__notWorkingContext","__challengesOfLifeWithRecord","__challengesOfLifeWithRecordContext","__whyWantsToClearRecord","pp1","formatFamilyString","__sinceMyLastConviction","__sinceMyLastConvictionContext","SinceMyLastConvictionContext","__whyItMatters","WhyItMatters","SinceMyLastConvictionAddContext","startsWith","parseInt","substring","items","class","FamilyBlock","WorkBlock","AddAnotherLifeChange","assemblePP1","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.96a312b2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Collapsible extends Component {\n  constructor(props) {\n    super(props)\n\n    this.timeout = undefined;\n\n    // Bind class methods\n    this.handleTriggerClick = this.handleTriggerClick.bind(this);\n    this.handleTransitionEnd = this.handleTransitionEnd.bind(this);\n    this.continueOpenCollapsible = this.continueOpenCollapsible.bind(this);\n    this.setInnerRef = this.setInnerRef.bind(this);\n\n    // Defaults the dropdown to be closed\n    if (props.open) {\n      this.state = {\n        isClosed: false,\n        shouldSwitchAutoOnNextCycle: false,\n        height: 'auto',\n        transition: 'none',\n        hasBeenOpened: true,\n        overflow: props.overflowWhenOpen,\n        inTransition: false,\n      }\n    } else {\n      this.state = {\n        isClosed: true,\n        shouldSwitchAutoOnNextCycle: false,\n        height: 0,\n        transition: `height ${props.transitionTime}ms ${props.easing}`,\n        hasBeenOpened: false,\n        overflow: 'hidden',\n        inTransition: false,\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.shouldOpenOnNextCycle) {\n      this.continueOpenCollapsible();\n    }\n\n    if (prevState.height === 'auto' && this.state.shouldSwitchAutoOnNextCycle === true) {\n      window.clearTimeout(this.timeout);\n      this.timeout = window.setTimeout(() => { // Set small timeout to ensure a true re-render\n        this.setState({\n          height: 0,\n          overflow: 'hidden',\n          isClosed: true,\n          shouldSwitchAutoOnNextCycle: false,\n        });\n      }, 50);\n    }\n\n    // If there has been a change in the open prop (controlled by accordion)\n    if (prevProps.open !== this.props.open) {\n      if (this.props.open === true) {\n        this.openCollapsible();\n        this.props.onOpening();\n      } else {\n        this.closeCollapsible();\n        this.props.onClosing();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearTimeout(this.timeout);\n  }\n\n  closeCollapsible() {\n    this.setState({\n      shouldSwitchAutoOnNextCycle: true,\n      height: this.innerRef.scrollHeight,\n      transition: `height ${this.props.transitionCloseTime ?\n        this.props.transitionCloseTime : this.props.transitionTime}ms ${this.props.easing}`,\n      inTransition: true,\n    });\n  }\n\n  openCollapsible() {\n    this.setState({\n      inTransition: true,\n      shouldOpenOnNextCycle: true,\n    });\n  }\n\n  continueOpenCollapsible() {\n    this.setState({\n      height: this.innerRef.scrollHeight,\n      transition: `height ${this.props.transitionTime}ms ${this.props.easing}`,\n      isClosed: false,\n      hasBeenOpened: true,\n      inTransition: true,\n      shouldOpenOnNextCycle: false,\n    });\n  }\n\n  handleTriggerClick(event) {\n    if (this.props.triggerDisabled || this.state.inTransition) {\n      return\n    }\n\n    event.preventDefault();\n\n\n    if (this.props.handleTriggerClick) {\n      this.props.handleTriggerClick(this.props.accordionPosition);\n    } else {\n      if (this.state.isClosed === true) {\n        this.openCollapsible();\n        this.props.onOpening();\n        this.props.onTriggerOpening();\n      } else {\n        this.closeCollapsible();\n        this.props.onClosing();\n        this.props.onTriggerClosing();\n      }\n    }\n  }\n\n  renderNonClickableTriggerElement() {\n    if (this.props.triggerSibling && typeof this.props.triggerSibling === 'string') {\n      return (\n        <span className={`${this.props.classParentString}__trigger-sibling`}>{this.props.triggerSibling}</span>\n      )\n    } else if (this.props.triggerSibling && typeof this.props.triggerSibling === 'function') {    \n      return this.props.triggerSibling();\n    } else if (this.props.triggerSibling) {\n      return <this.props.triggerSibling />\n    }\n\n    return null;\n  }\n\n  handleTransitionEnd(e) {\n    // only handle transitions that origin from the container of this component\n    if (e.target !== this.innerRef) {\n      return;\n    }\n    // Switch to height auto to make the container responsive\n    if (!this.state.isClosed) {\n      this.setState({ height: 'auto', overflow: this.props.overflowWhenOpen, inTransition: false });\n      this.props.onOpen();\n    } else {\n      this.setState({ inTransition: false });\n      this.props.onClose();\n    }\n  }\n\n  setInnerRef(ref) {\n    this.innerRef = ref\n  }\n\n  render() {\n    const dropdownStyle = {\n      height: this.state.height,\n      WebkitTransition: this.state.transition,\n      msTransition: this.state.transition,\n      transition: this.state.transition,\n      overflow: this.state.overflow,\n    }\n\n    var openClass = this.state.isClosed ? 'is-closed' : 'is-open';\n    var disabledClass = this.props.triggerDisabled ? 'is-disabled' : '';\n\n    //If user wants different text when tray is open\n    var trigger = (this.state.isClosed === false) && (this.props.triggerWhenOpen !== undefined)\n      ? this.props.triggerWhenOpen\n      : this.props.trigger;\n\n    const ContentContainerElement = this.props.contentContainerTagName;\n\n    // If user wants a trigger wrapping element different than 'span'\n    const TriggerElement = this.props.triggerTagName;\n\n    // Don't render children until the first opening of the Collapsible if lazy rendering is enabled\n    var children = this.props.lazyRender\n      && !this.state.hasBeenOpened\n      && this.state.isClosed\n      && !this.state.inTransition ? null : this.props.children;\n\n    // Construct CSS classes strings\n    const triggerClassString = `${this.props.classParentString}__trigger ${openClass} ${disabledClass} ${\n      this.state.isClosed ? this.props.triggerClassName : this.props.triggerOpenedClassName\n      }`;\n    const parentClassString = `${this.props.classParentString} ${\n      this.state.isClosed ? this.props.className : this.props.openedClassName\n      }`;\n    const outerClassString = `${this.props.classParentString}__contentOuter ${this.props.contentOuterClassName}`;\n    const innerClassString = `${this.props.classParentString}__contentInner ${this.props.contentInnerClassName}`;\n\n    return (\n      <ContentContainerElement className={parentClassString.trim()} {...this.props.containerElementProps} >\n        <TriggerElement\n          className={triggerClassString.trim()}\n          onClick={this.handleTriggerClick}\n          style={this.props.triggerStyle && this.props.triggerStyle}\n          onKeyPress={(event) => {\n            const { key } = event;\n            if ((key === ' ' && this.props.triggerTagName.toLowerCase() !== 'button') || key === 'Enter') {\n              this.handleTriggerClick(event);\n            }\n          }}\n          tabIndex={this.props.tabIndex && this.props.tabIndex}\n          {...this.props.triggerElementProps}\n        >\n          {trigger}\n        </TriggerElement>\n\n        {this.renderNonClickableTriggerElement()}\n\n        <div\n          className={outerClassString.trim()}\n          style={dropdownStyle}\n          onTransitionEnd={this.handleTransitionEnd}\n          ref={this.setInnerRef}\n        >\n          <div\n            className={innerClassString.trim()}\n          >\n            {children}\n          </div>\n        </div>\n      </ContentContainerElement>\n    );\n  }\n}\n\nCollapsible.propTypes = {\n  transitionTime: PropTypes.number,\n  transitionCloseTime: PropTypes.number,\n  triggerTagName: PropTypes.string,\n  easing: PropTypes.string,\n  open: PropTypes.bool,\n  containerElementProps: PropTypes.object,\n  triggerElementProps: PropTypes.object,\n  classParentString: PropTypes.string,\n  openedClassName: PropTypes.string,\n  triggerStyle: PropTypes.object,\n  triggerClassName: PropTypes.string,\n  triggerOpenedClassName: PropTypes.string,\n  contentOuterClassName: PropTypes.string,\n  contentInnerClassName: PropTypes.string,\n  accordionPosition: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  handleTriggerClick: PropTypes.func,\n  onOpen: PropTypes.func,\n  onClose: PropTypes.func,\n  onOpening: PropTypes.func,\n  onClosing: PropTypes.func,\n  onTriggerOpening: PropTypes.func,\n  onTriggerClosing: PropTypes.func,\n  trigger: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element\n  ]),\n  triggerWhenOpen: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element\n  ]),\n  triggerDisabled: PropTypes.bool,\n  lazyRender: PropTypes.bool,\n  overflowWhenOpen: PropTypes.oneOf([\n    'hidden',\n    'visible',\n    'auto',\n    'scroll',\n    'inherit',\n    'initial',\n    'unset',\n  ]),\n  triggerSibling: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  tabIndex: PropTypes.number,\n  contentContainerTagName: PropTypes.string,\n}\n\nCollapsible.defaultProps = {\n  transitionTime: 400,\n  transitionCloseTime: null,\n  triggerTagName: 'span',\n  easing: 'linear',\n  open: false,\n  classParentString: 'Collapsible',\n  triggerDisabled: false,\n  lazyRender: false,\n  overflowWhenOpen: 'hidden',\n  openedClassName: '',\n  triggerStyle: null,\n  triggerClassName: '',\n  triggerOpenedClassName: '',\n  contentOuterClassName: '',\n  contentInnerClassName: '',\n  className: '',\n  triggerSibling: null,\n  onOpen: () => { },\n  onClose: () => { },\n  onOpening: () => { },\n  onClosing: () => { },\n  onTriggerOpening: () => { },\n  onTriggerClosing: () => { },\n  tabIndex: null,\n  contentContainerTagName: 'div',\n};\n\nexport default Collapsible;\n","import React from 'react';\nimport Collapsible from './Collapsible.js';\n\nclass Paragraph1 extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            Name: \"\",\n            AgeInYears: -1,\n            NumberOfConvictions: -1,\n            SubjectOfConvictions: \"\",\n            TimeSinceLastConviction: \"\",\n            CloseToFamily: false,\n            Family: [],\n            IsWorking: \"No\",  // choose from \"Yes\", \"No, but I was recently\", \"No\"\n            Industry: \"\",\n            WorkingDuration: \"\",\n            AddContextToNotWorking: false,\n            AddContextToWorking: false,\n            NotWorkingContext: \"\",\n            WorkContext: \"\",\n            ChallengesOfLifeWithRecord: \"\",\n            ChallengesOfLifeWithRecordContext: \"\",\n            WhyWantsToClearRecord: \"\",\n        };\n        this.handleChange = this.handleChange.bind(this);\n      }\n\n      assemble() {\n        var addPlaceholders = true;\n        var __name = this.state.Name.trim();\n        var __age = (this.state.AgeInYears < 0) ? \"null\": this.state.AgeInYears.toString();\n        var __numberOfConvictions = (this.state.AgeInYears < 0) ? \"null\" : this.state.NumberOfConvictions.toString();\n        var __subjectOfConvictions = this.state.SubjectOfConvictions.trim();\n        var __timeSinceLastConviction = this.state.TimeSinceLastConviction.trim();\n        var __industry = this.state.Industry.trim();\n        var __workingDuration = this.state.WorkingDuration.trim();\n        var __workContext = this.state.WorkContext.trim()  // TODO add a standard sentence formatting fn to a paragraph class and extend it\n        var __notWorkingContext = this.state.NotWorkingContext.trim();\n        var __challengesOfLifeWithRecord = this.state.ChallengesOfLifeWithRecord.trim();\n        var __challengesOfLifeWithRecordContext = this.state.ChallengesOfLifeWithRecordContext.trim();\n        var __whyWantsToClearRecord = this.state.WhyWantsToClearRecord.trim();\n\n        if (addPlaceholders) {\n            __name = (__name === \"\") ? \"(your name)\" : __name;\n            __age = (__age === \"null\") ? \"(your age)\" : __age;\n            __numberOfConvictions = (__numberOfConvictions === \"null\") ? \"(number)\" : __numberOfConvictions;\n            __subjectOfConvictions = (__subjectOfConvictions === \"\") ? \"(subject of convictions)\" : __subjectOfConvictions;\n            __timeSinceLastConviction = (__timeSinceLastConviction === \"\") ? \"(time period)\" : __timeSinceLastConviction;\n            __industry = (__industry === \"\") ? \"(industry)\" : __industry;\n            __workingDuration = (__workingDuration === \"\") ? \"(duration)\" : __workingDuration;\n            __workContext = (__workContext === \"\") ? \"(your sentence).\" : __workContext;\n            __notWorkingContext = (__notWorkingContext === \"\") ? \"(your sentence).\" : __notWorkingContext;\n            __challengesOfLifeWithRecord = (__challengesOfLifeWithRecord === \"\") ? \"(your sentence).\" : __challengesOfLifeWithRecord;\n            __challengesOfLifeWithRecordContext = (__challengesOfLifeWithRecordContext === \"\") ? \"(your sentence).\" : __challengesOfLifeWithRecordContext;\n            __whyWantsToClearRecord = (__whyWantsToClearRecord === \"\") ? \"(your sentence).\" : __whyWantsToClearRecord; \n        }\n\n        var pp1 = \"My name is \" + __name + \", and I am \" + __age + \" years old. \";\n        pp1 += \"I have \" + __numberOfConvictions\n        pp1 += (__numberOfConvictions === 1) ? \" conviction \" : \" convictions \"\n        pp1 += \"for \" + __subjectOfConvictions + \", and \" \n        pp1 += (__numberOfConvictions === 1) ? \" it was \" : \" they were \" \n        pp1 += __timeSinceLastConviction + \" ago. \"\n        if (this.state.CloseToFamily) {\n            pp1 += \"I have a close family, including \" + this.formatFamilyString() + \". \";\n        }\n        if (this.state.IsWorking === \"No\" && this.state.AddContextToNotWorking) {\n            pp1 += __notWorkingContext;  // TODO should add punctuation if not already present. multiple instances of this\n        } else {\n            if (this.state.IsWorking === \"Yes\") {\n                pp1 += \"I have been working in \" + __industry + \" for \" + __workingDuration + \". \"\n            } else if (this.state.IsWorking === \"NoButRecently\") {\n                pp1 += \"Until recently I was working in \" + __industry + \" for \" +__workingDuration + \". \"\n            } \n            if (this.state.AddContextToWorking) {\n                pp1 += __workContext;\n            } \n        }\n        pp1 += __challengesOfLifeWithRecord + \" \";\n        pp1 += __challengesOfLifeWithRecordContext + \" \";\n        pp1 += __whyWantsToClearRecord + \" \";\n\n        return pp1;\n    }\n\n    handleChange(event) {    \n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    }\n\n    showInputs() {\n      return (\n        <div>\n        <Collapsible trigger=\"Paragraph 1\">\n        <form> \n        <label>\n          Your name as you would like to see it on your personal statement:\n          <input type=\"text\" name=\"Name\" value={this.state.Name} onChange={this.handleChange} />        \n        </label>\n        <br/>\n        <label>\n          Your age in years: \n          <input type=\"number\" name=\"AgeInYears\" value={this.state.AgeInYears} onChange={this.handleChange} />        \n        </label>\n        <br/>\n        <label>\n          How many convictions do you have? \n          <input type=\"number\" name=\"NumberOfConvictions\" value={this.state.NumberOfConvictions} onChange={this.handleChange} />        \n        </label>\n        <br/>\n        <label>\n          What are your convictions for? \n          <input type=\"text\" name=\"SubjectOfConvictions\" value={this.state.SubjectOfConvictions} onChange={this.handleChange} />        \n        </label>\n        <br/>\n        <label>\n          How long ago was your most recent conviction? \n          <input type=\"text\" name=\"TimeSinceLastConviction\" value={this.state.TimeSinceLastConviction} onChange={this.handleChange} />        \n        </label>\n        <br/>\n        <label>\n          Are you close to your family? \n          <label> Yes \n          <input type=\"radio\" name=\"CloseToFamily\" value={\"Yes\"} checked={this.state.CloseToFamily === \"Yes\"} onChange={this.handleChange} />      \n          </label>\n          <label> No\n          <input type=\"radio\" name=\"CloseToFamily\" value={\"No\"} checked={this.state.CloseToFamily === \"No\"} onChange={this.handleChange} />  \n          </label>\n        </label>\n        {/* <br/>\n        <label>\n          Add a family member and your relationship to them:  \n          <input type=\"text\" name=\"Family\" value={this.state.Family} onChange={this.handleChange} />       \n        </label> */}\n        </form>\n        </Collapsible>\n        <div>My name is {this.state.Name}</div>\n      </div>\n      );\n    }\n}\n\n// export default Paragraph1;\n\nclass Context extends React.Component {\n  render() {\n    return (\n      <button>Add context to the prior response? </button>\n    )\n  }\n}\n\nexport default Context;\n","import React, { Component } from 'react';\nimport Collapsible from './Collapsible.js';\nimport './main.css';\n\nimport Context from './Paragraph1';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Name: \"\",\n      AgeInYears: -1,\n      NumberOfConvictions: -1,\n      SubjectOfConvictions: \"\",\n      TimeSinceLastConviction: \"\",\n      CloseToFamily: false,\n      Family: [\"\"],\n      AddAnotherFamilyMember: \"No\",\n      IsWorking: \"No\",  // choose from \"Yes\", \"No, but I was recently\", \"No\"\n      Industry: \"\",\n      WorkingDuration: \"\",\n      AddContextToNotWorking: false,\n      AddContextToWorking: false,\n      NotWorkingContext: \"\",\n      WorkContext: \"\",\n      ChallengesOfLifeWithRecord: \"\",\n      ChallengesOfLifeWithRecordContext: \"\",\n      WhyWantsToClearRecord: \"\",\n      SinceMyLastConviction: \"\",\n    };\n    this.handleChange = this.handleChange.bind(this);  \n  }\n\n  formatFamilyString() {\n    var str = this.state.Family.join(\", \");\n    return (str === \"\") ? \"(your family)\" : str;\n  } \n\n  FamilyBlock() {\n    if (this.state.CloseToFamily) {\n      return (\n        <div>\n          { this.state.Family.map((familyMember, index) => { \n            return (\n              <label> Add a family member and your relationship to them:\n                <input type=\"text\" name={\"Family\" + index.toString()} value={this.state.familyMember} onChange={this.handleChange} />       \n                <br/>\n              </label>\n          )})}\n          Would you like to add another family member?\n          <label> Yes \n          <input type=\"radio\" name=\"AddAnotherFamilyMember\" value={\"Yes\"} checked={this.state.AddAnotherFamilyMember === \"Yes\"} onChange={this.handleChange} />      \n          </label>\n          <label> No\n          <input type=\"radio\" name=\"AddAnotherFamilyMember\" value={\"No\"} checked={this.state.AddAnotherFamilyMember === \"No\"} />  \n          </label>\n          <br/>\n        </div>);\n    }\n  }\n\n  WorkBlock() {\n    if (this.state.IsWorking === \"Yes\") {\n      return (\n        <div>\n          <label>In what industry are you working? </label>\n          <input type=\"text\" name=\"Industry\" value={this.state.Industry} onChange={this.handleChange} /> \n          <br/>\n                \n        </div>\n      );\n    }\n  }\n\n  assemblePP1() {\n    var addPlaceholders = true;\n    var __name = this.state.Name.trim();\n    var __age = (this.state.AgeInYears < 0) ? \"null\": this.state.AgeInYears.toString();\n    var __numberOfConvictions = (this.state.AgeInYears < 0) ? \"null\" : this.state.NumberOfConvictions.toString();\n    var __subjectOfConvictions = this.state.SubjectOfConvictions.trim();\n    var __timeSinceLastConviction = this.state.TimeSinceLastConviction.trim();\n    var __industry = this.state.Industry.trim();\n    var __workingDuration = this.state.WorkingDuration.trim();\n    var __workContext = this.state.WorkContext.trim()  // TODO add a standard sentence formatting fn to a paragraph class and extend it\n    var __notWorkingContext = this.state.NotWorkingContext.trim();\n    var __challengesOfLifeWithRecord = this.state.ChallengesOfLifeWithRecord.trim();\n    var __challengesOfLifeWithRecordContext = this.state.ChallengesOfLifeWithRecordContext.trim();\n    var __whyWantsToClearRecord = this.state.WhyWantsToClearRecord.trim();\n\n    if (addPlaceholders) {\n        __name = (__name === \"\") ? \"(your name)\" : __name;\n        __age = (__age === \"null\") ? \"(your age)\" : __age;\n        __numberOfConvictions = (__numberOfConvictions === \"null\") ? \"(number)\" : __numberOfConvictions;\n        __subjectOfConvictions = (__subjectOfConvictions === \"\") ? \"(subject of convictions)\" : __subjectOfConvictions;\n        __timeSinceLastConviction = (__timeSinceLastConviction === \"\") ? \"(time period)\" : __timeSinceLastConviction;\n        __industry = (__industry === \"\") ? \"(industry)\" : __industry;\n        __workingDuration = (__workingDuration === \"\") ? \"(duration)\" : __workingDuration;\n        __workContext = (__workContext === \"\") ? \"(your sentence).\" : __workContext;\n        __notWorkingContext = (__notWorkingContext === \"\") ? \"(your sentence).\" : __notWorkingContext;\n        __challengesOfLifeWithRecord = (__challengesOfLifeWithRecord === \"\") ? \"(your sentence).\" : __challengesOfLifeWithRecord;\n        __challengesOfLifeWithRecordContext = (__challengesOfLifeWithRecordContext === \"\") ? \"(your sentence).\" : __challengesOfLifeWithRecordContext;\n        __whyWantsToClearRecord = (__whyWantsToClearRecord === \"\") ? \"(your sentence).\" : __whyWantsToClearRecord; \n    }\n\n    var pp1 = \"My name is \" + __name + \", and I am \" + __age + \" years old. \";\n    pp1 += \"I have \" + __numberOfConvictions\n    pp1 += (__numberOfConvictions === 1) ? \" conviction \" : \" convictions \"\n    pp1 += \"for \" + __subjectOfConvictions + \", and \" \n    pp1 += (__numberOfConvictions === 1) ? \" it was \" : \" they were \" \n    pp1 += __timeSinceLastConviction + \" ago. \"\n    if (this.state.CloseToFamily) {\n        pp1 += \"I have a close family, including \" + this.formatFamilyString() + \". \";\n    }\n    if (this.state.IsWorking === \"No\" && this.state.AddContextToNotWorking) {\n        pp1 += __notWorkingContext;  // TODO should add punctuation if not already present. multiple instances of this\n    } else {\n        if (this.state.IsWorking === \"Yes\") {\n            pp1 += \"I have been working in \" + __industry + \" for \" + __workingDuration + \". \"\n        } else if (this.state.IsWorking === \"NoButRecently\") {\n            pp1 += \"Until recently I was working in \" + __industry + \" for \" +__workingDuration + \". \"\n        } \n        if (this.state.AddContextToWorking) {\n            pp1 += __workContext;\n        } \n    }\n    pp1 += __challengesOfLifeWithRecord + \" \";\n    pp1 += __challengesOfLifeWithRecordContext + \" \";\n    pp1 += __whyWantsToClearRecord + \" \";\n\n    return pp1;\n  }\n\n  assemblePP2() {\n    var addPlaceholders = true;\n    var __sinceMyLastConviction = this.state.SinceMyLastConviction.trim();\n    var __sinceMyLastConvictionContext = this.state.SinceMyLastConvictionContext.trim();\n    var __whyItMatters = this.state.WhyItMatters.trim(); \n\n    if (addPlaceholders) {\n      __sinceMyLastConviction = (__sinceMyLastConviction === \"\") ? \"(your response)\" : __sinceMyLastConviction;\n      if (this.state.SinceMyLastConvictionAddContext) {\n        __sinceMyLastConvictionContext = (__sinceMyLastConvictionContext === \"\") ? \"(your sentence). \" : __sinceMyLastConvictionContext;\n      }\n      this.__whyItMatters = (__whyItMatters === \"\") ? \"(your sentence). \" : __whyItMatters;\n    }\n\n    var pp2 = \"Since my last conviction, \" + __sinceMyLastConviction + \". \";\n\n    return pp2;\n  }\n\n  handleChange(event) { \n    if (event.target.name.startsWith(\"Family\")) {\n      let index = parseInt(event.target.name.substring(6))\n      let items = [...this.state.Family];\n      items[index] = event.target.value\n      this.setState({\n        \"Family\": items\n      });\n    } else if (event.target.name === \"AddAnotherFamilyMember\") {\n      this.setState({\n        \"Family\": [...this.state.Family, \"\"]\n      });\n    } else {  \n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    }\n  }\n\n  render () {\n    return (\n      <div class=\"row\">\n        <div class=\"column\">\n        <div>\n        <Collapsible trigger=\"Paragraph 1\">\n        <form> \n        <label>\n          Your name as you would like to see it on your personal statement:\n          <input type=\"text\" name=\"Name\" value={this.state.Name} onChange={this.handleChange} />        \n        </label>\n        <br/>\n        <label>\n          Your age in years: \n          <input type=\"number\" name=\"AgeInYears\" value={this.state.AgeInYears} onChange={this.handleChange} />        \n        </label>\n        <br/>\n        <label>\n          How many convictions do you have? \n          <input type=\"number\" name=\"NumberOfConvictions\" value={this.state.NumberOfConvictions} onChange={this.handleChange} />        \n        </label>\n        <br/>\n        <label>\n          What are your convictions for? \n          <input type=\"text\" name=\"SubjectOfConvictions\" value={this.state.SubjectOfConvictions} onChange={this.handleChange} />        \n        </label>\n        <br/>\n        <label>\n          How long ago was your most recent conviction? \n          <input type=\"text\" name=\"TimeSinceLastConviction\" value={this.state.TimeSinceLastConviction} onChange={this.handleChange} />        \n        </label>\n        <br/>\n        <label>\n          Are you close to your family? \n          <label> Yes \n          <input type=\"radio\" name=\"CloseToFamily\" value={\"Yes\"} checked={this.state.CloseToFamily === \"Yes\"} onChange={this.handleChange} />      \n          </label>\n          <label> No\n          <input type=\"radio\" name=\"CloseToFamily\" value={\"No\"} checked={this.state.CloseToFamily === \"No\"} onChange={this.handleChange} />  \n          </label>\n        </label>\n        <br/>\n        { this.FamilyBlock() }\n        <label>Are you currently working? Choose the closest answer: <br/>\n          <input type=\"radio\" name=\"IsWorking\" value={\"Yes\"} checked={this.state.IsWorking === \"Yes\"} onChange={this.handleChange} />      \n          <label> Yes \n          </label>\n          <br/>\n          <input type=\"radio\" name=\"IsWorking\" value={\"No, but I was until recently\"} checked={this.state.IsWorking === \"No, but I was until recently\"} onChange={this.handleChange} />  \n          <label> No, but I was until recently\n          </label>\n          <br/>\n          <input type=\"radio\" name=\"IsWorking\" value={\"No\"} checked={this.state.IsWorking === \"No\"} onChange={this.handleChange} />  \n          <label> No\n          </label>\n          <br/>\n        { this.WorkBlock() }\n        </label>\n        <label> Please write a sentence describing the challenges of life with a record: </label> <br/>\n        <textarea name=\"ChallengesOfLifeWithRecord\" value={this.state.ChallengesOfLifeWithRecord} onChange={this.handleChange} />\n        <br/>\n        <label> Please write a sentence adding context to your last response: </label> <br/>\n        <textarea name=\"ChallengesOfLifeWithRecordContext\" value={this.state.ChallengesOfLifeWithRecordContext} onChange={this.handleChange} />\n        <br/>\n        <label> Please write a sentence that states why you want to clear your record: </label> <br/>\n        <textarea name=\"WhyWantsToClearRecord\" value={this.state.WhyWantsToClearRecord} onChange={this.handleChange} />\n        </form>\n        </Collapsible>\n        </div>\n        <div>\n        <Collapsible trigger=\"Paragraph 2\">\n        <form> \n        <label> Complete the sentence: <br/>\"Since my last conviction, </label> \n        <input type=\"text\" name=\"SinceMyLastConviction\" value={this.state.SinceMyLastConviction} onChange={this.handleChange} />\n        <br/>\n        <Context/>     \n        <br/>\n        <label>\n          Would you like to add another life change?\n          <label> Yes \n          <input type=\"radio\" name=\"AddAnotherLifeChange\" value={\"Yes\"} checked={this.state.AddAnotherLifeChange === \"Yes\"} onChange={this.handleChange} />      \n          </label>\n          <label> No\n          <input type=\"radio\" name=\"AddAnotherLifeChange\" value={\"No\"} checked={this.state.AddAnotherLifeChange === \"No\"} onChange={this.handleChange} />  \n          </label>\n        </label>\n        </form>\n        </Collapsible>\n        </div>\n        </div>\n        <div class=\"column\">\n          { this.assemblePP1() }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}